{"ast":null,"code":"import FormTitle from \"./components/FormTitle.vue\";\nimport FormCurrency from './components/FormCurrency.vue';\nimport FormChangeRate from './components/FormChangeRate.vue';\nimport FormProducts from './components/FormProducts.vue'; //Tool used for fetching.\n\nimport axios from 'axios';\nexport default {\n  name: \"App\",\n  components: {\n    FormTitle,\n    FormCurrency,\n    FormChangeRate,\n    FormProducts\n  },\n  methods: {\n    addProduct(product) {\n      //Add Product to the list of products that are registered on the table.\n      this.products.push(product);\n    },\n\n    removeProduct(uuid) {\n      //Remove product from the list of products of the table.\n      this.products = this.products.filter(product => product.entry_uuid != uuid);\n    },\n\n    updateCurrency(currency) {\n      //When changed the currency, \n      //we will update it to all the components.\n      this.currency = currency;\n      const filtered = this.currency_fetched.filter(curr => curr.code == currency);\n      this.selected_currency_info = { ...filtered[0]\n      };\n      console.log(this.selected_currency_info);\n    },\n\n    changeRate(value) {\n      //When changed the value of the exchange rate, \n      //we will update it to all the components.\n      this.selected_currency_info = { ...this.selected_currency_info,\n        value\n      };\n    },\n\n    changedSubTotal(value) {\n      //When changed the SubTotal in any of the products, we will update it everywhere.\n      for (let i = 0; i < this.products.length; i++) {\n        if (this.products[i].entry_uuid == value.uuid) {\n          this.products[i].sub_total = value.sub_total;\n          console.log(this.products[i]);\n        }\n      }\n    }\n\n  },\n\n  data() {\n    return {\n      currency: 'USD',\n      selected_currency_info: {\n        \"code\": \"USD\",\n        \"name\": \"Dolar\",\n        \"value\": 1,\n        \"sub_total\": 0\n      },\n      currency_fetched: [],\n      products_fetched: [],\n      products: []\n    };\n  },\n\n  mounted() {\n    // When mounted, We're going to fetch data\n    let API_URL = 'http://localhost:3000/api/'; // Products\n\n    axios.get(API_URL + 'products').then(response => {\n      this.products_fetched = response.data;\n      console.log(response);\n    }); // Currency\n\n    axios.get(API_URL + 'currency').then(response => this.currency_fetched = response.data);\n  }\n\n};","map":{"version":3,"mappings":"AAeA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,YAAP,MAAyB,+BAAzB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACXC,MAAI,EAAE,KADK;AAEXC,YAAU,EAAE;AACRN,aADQ;AAERC,gBAFQ;AAGRC,kBAHQ;AAIRC;AAJQ,GAFD;AAQXI,SAAO,EAAE;AAGPC,cAAS,CAAGC,OAAH,EAAY;AACnB;AACA,WAAKC,QAAL,CAAcC,IAAd,CAAmBF,OAAnB;AACD,KANM;;AASPG,iBAAa,CAACC,IAAD,EAAM;AACjB;AACA,WAAKH,QAAL,GAAgB,KAAKA,QAAL,CAAcI,MAAd,CAAsBL,OAAD,IAAaA,OAAO,CAACM,UAAR,IAAsBF,IAAxD,CAAhB;AACD,KAZM;;AAePG,kBAAc,CAACC,QAAD,EAAW;AACvB;AACA;AACA,WAAKA,QAAL,GAAgBA,QAAhB;AAEA,YAAMC,QAAO,GAAI,KAAKC,gBAAL,CAAsBL,MAAtB,CAA8BM,IAAD,IAAUA,IAAI,CAACC,IAAL,IAAaJ,QAApD,CAAjB;AACA,WAAKK,sBAAL,GAA8B,EAAC,GAAGJ,QAAQ,CAAC,CAAD;AAAZ,OAA9B;AACAK,aAAO,CAACC,GAAR,CAAY,KAAKF,sBAAjB;AACD,KAvBM;;AA0BPG,cAAU,CAACC,KAAD,EAAQ;AAChB;AACA;AACA,WAAKJ,sBAAL,GAA8B,EAAC,GAAG,KAAKA,sBAAT;AAAiCI;AAAjC,OAA9B;AACD,KA9BM;;AAkCPC,mBAAe,CAACD,KAAD,EAAO;AACpB;AACA,WAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAI,KAAKlB,QAAL,CAAcmB,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,YAAI,KAAKlB,QAAL,CAAckB,CAAd,EAAiBb,UAAjB,IAA+BW,KAAK,CAACb,IAAzC,EAA+C;AAC7C,eAAKH,QAAL,CAAckB,CAAd,EAAiBE,SAAjB,GAA6BJ,KAAK,CAACI,SAAnC;AACAP,iBAAO,CAACC,GAAR,CAAY,KAAKd,QAAL,CAAckB,CAAd,CAAZ;AACF;AACF;AACF;;AA1CO,GARE;;AAuDXG,MAAG,GAAK;AACN,WAAO;AACLd,cAAQ,EAAE,KADL;AAELK,4BAAsB,EAAE;AACtB,gBAAQ,KADc;AAEtB,gBAAQ,OAFc;AAGtB,iBAAS,CAHa;AAItB,qBAAa;AAJS,OAFnB;AAQLH,sBAAgB,EAAE,EARb;AAULa,sBAAgB,EAAE,EAVb;AAYLtB,cAAQ,EAAE;AAZL,KAAP;AAcD,GAtEU;;AAuEXuB,SAAM,GAAK;AACT;AAEA,QAAIC,OAAM,GAAI,4BAAd,CAHS,CAKT;;AACA9B,SAAI,CACD+B,GADH,CACOD,OAAM,GAAI,UADjB,EAEGE,IAFH,CAEQC,QAAO,IAAK;AAAC,WAAKL,gBAAL,GAAwBK,QAAQ,CAACN,IAAjC;AAAuCR,aAAO,CAACC,GAAR,CAAYa,QAAZ;AAAsB,KAFlF,EANS,CAUT;;AACAjC,SAAI,CACD+B,GADH,CACOD,OAAM,GAAI,UADjB,EAEGE,IAFH,CAEQC,QAAO,IAAK,KAAKlB,gBAAL,GAAwBkB,QAAQ,CAACN,IAFrD;AAGF;;AArFW,CAAf","names":["FormTitle","FormCurrency","FormChangeRate","FormProducts","axios","name","components","methods","addProduct","product","products","push","removeProduct","uuid","filter","entry_uuid","updateCurrency","currency","filtered","currency_fetched","curr","code","selected_currency_info","console","log","changeRate","value","changedSubTotal","i","length","sub_total","data","products_fetched","mounted","API_URL","get","then","response"],"sourceRoot":"","sources":["C:\\Users\\01mwk.DESKTOP-33PCD1S\\Documents\\GitHub\\prueba_tecnica_AFRG\\prolibu-client\\src\\App.vue"],"sourcesContent":["<template>\n    <h1>Prolibu - Andrés Rodríguez</h1>\n    <div id=\"form-container\" action=\"\">\n        <div id=\"first-container\">\n            <div id=\"second-container\">\n              <FormTitle />\n              <FormCurrency v-bind:currency_prop=\"currency\" v-on:updateCurrency=\"updateCurrency\"/>\n            </div>\n            <FormChangeRate v-model:selected_currency_info=\"selected_currency_info\" v-on:changeRate=\"changeRate\"/>\n        </div>\n        <FormProducts v-on:addProduct=\"addProduct\" v-bind:products_fetched=\"products_fetched\" v-bind:currency_fetched=\"currency_fetched\" v-bind:products=\"products\" v-bind:selected_currency_info=\"selected_currency_info\" v-on:removeProduct=\"removeProduct\" v-on:changedSubTotal=\"changedSubTotal\"/>\n    </div>\n</template>\n\n<script>\nimport FormTitle from \"./components/FormTitle.vue\";\nimport FormCurrency from './components/FormCurrency.vue'\nimport FormChangeRate from './components/FormChangeRate.vue'\nimport FormProducts from './components/FormProducts.vue';\n\n//Tool used for fetching.\nimport axios from 'axios'\n\nexport default {\n    name: \"App\",\n    components: {\n        FormTitle,\n        FormCurrency,\n        FormChangeRate,\n        FormProducts,\n    },\n    methods: {\n\n\n      addProduct (product) {\n        //Add Product to the list of products that are registered on the table.\n        this.products.push(product)\n      },\n\n\n      removeProduct(uuid){\n        //Remove product from the list of products of the table.\n        this.products = this.products.filter((product) => product.entry_uuid != uuid)\n      },\n\n\n      updateCurrency(currency) {\n        //When changed the currency, \n        //we will update it to all the components.\n        this.currency = currency\n\n        const filtered = this.currency_fetched.filter((curr) => curr.code == currency)\n        this.selected_currency_info = {...filtered[0]}\n        console.log(this.selected_currency_info)\n      },\n\n\n      changeRate(value) {\n        //When changed the value of the exchange rate, \n        //we will update it to all the components.\n        this.selected_currency_info = {...this.selected_currency_info, value}\n      },\n\n\n\n      changedSubTotal(value){\n        //When changed the SubTotal in any of the products, we will update it everywhere.\n        for (let i = 0; i < this.products.length; i++) {\n          if (this.products[i].entry_uuid == value.uuid) {\n            this.products[i].sub_total = value.sub_total\n            console.log(this.products[i])\n          }\n        }\n      }\n\n\n\n    },\n    data () {\n      return {\n        currency: 'USD',\n        selected_currency_info: {\n          \"code\": \"USD\",\n          \"name\": \"Dolar\",\n          \"value\": 1,\n          \"sub_total\": 0,\n        },\n        currency_fetched: [\n        ],\n        products_fetched: [\n        ],\n        products: [],\n      }\n    },\n    mounted () {\n      // When mounted, We're going to fetch data\n\n      let API_URL = 'http://localhost:3000/api/'\n\n      // Products\n      axios\n        .get(API_URL + 'products')\n        .then(response => {this.products_fetched = response.data; console.log(response)})\n\n      // Currency\n      axios\n        .get(API_URL + 'currency')\n        .then(response => this.currency_fetched = response.data)\n    }\n};\n</script>\n\n<style>\n#app {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-align: center;\n    color: #2c3e50;\n    margin-top: 60px;\n}\n#form-container {\n    display: flex;\n    flex-direction: column;\n    width: 80vw;\n    justify-content: center;\n    justify-self: center;\n    align-items: center;\n    margin: auto;\n}\n#first-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    width: 50%;\n    min-width: 350px;\n}\n\n  #second-container {\n    display: flex;\n    flex-direction: row;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}