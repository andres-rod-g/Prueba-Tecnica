{"ast":null,"code":"import \"vue-select/dist/vue-select.css\";\nexport default {\n  name: \"FormProduct\",\n  props: ['product_prop', 'products_fetched', 'selected_currency_info', 'currency_fetched'],\n  components: {},\n  methods: {\n    findMyCurrency(currency_code) {\n      for (let i = 0; i < this.currency_fetched.length; i++) {\n        console.log(this.currency_fetched[i]);\n\n        if (this.currency_fetched[i].code == currency_code) {\n          return this.currency_fetched[i];\n        }\n      }\n    },\n\n    updateData() {\n      if (this.currency == this.selected_currency_info.code) {\n        this.conversion = this.selectedProduct.price;\n        this.quantity_price = ' ' + parseFloat(this.units * this.selectedProduct.price).toFixed(2);\n      } else {\n        const thisCurrency = this.findMyCurrency(this.selectedProduct.currency);\n        console.log(thisCurrency, this.selectedProduct.price, this.currency_price, thisCurrency.value);\n        this.conversion = ' ' + parseFloat(this.selectedProduct.price * this.currency_price / thisCurrency.value).toFixed(2);\n        this.quantity_price = ' ' + parseFloat(this.selectedProduct.price * this.currency_price / thisCurrency.value * this.units).toFixed(2);\n      }\n\n      const val = parseFloat(Number(this.quantity_price) + Number(this.quantity_price) * Number(this.selectedProduct.taxRate) / 100).toFixed(2);\n      this.sub_total = parseFloat(val - Number(this.quantity_price) * Number(this.discount) / 100).toFixed(2);\n    },\n\n    addUnit(e) {\n      e.preventDefault();\n      this.units += 1;\n      this.updateData();\n    },\n\n    decreseUnit(e) {\n      e.preventDefault();\n\n      if (this.units > 1) {\n        this.units -= 1;\n      } else {\n        //Remove Product\n        console.log('about to remove');\n        this.$emit('removeProduct', this.product_prop.entry_uuid);\n      }\n\n      this.updateData();\n    },\n\n    changeSelected() {\n      console.log(this.selectedProduct.currency);\n      this.currency = this.selectedProduct.currency;\n      this.updateData();\n    }\n\n  },\n\n  data() {\n    return {\n      units: 1,\n      discount: 0,\n      currency: 'USD',\n      currency_price: 0,\n      conversion: 0,\n      quantity_price: 0,\n      sub_total: 0,\n      selectedProduct: {\n        \"sku\": \"--\",\n        \"name\": \"Pinzas\",\n        \"price\": 0,\n        \"currency\": \"USD\",\n        \"taxRate\": 0\n      }\n    };\n  },\n\n  watch: {\n    selected_currency_info: {\n      immediate: true,\n\n      handler(val) {\n        this.currency_price = val.value;\n        console.log(this.currency, val.code);\n        this.updateData();\n      }\n\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","props","components","methods","findMyCurrency","currency_code","i","currency_fetched","length","console","log","code","updateData","currency","selected_currency_info","conversion","selectedProduct","price","quantity_price","parseFloat","units","toFixed","thisCurrency","currency_price","value","val","Number","taxRate","sub_total","discount","addUnit","e","preventDefault","decreseUnit","$emit","product_prop","entry_uuid","changeSelected","data","watch","immediate","handler"],"sourceRoot":"","sources":["C:\\Users\\01mwk.DESKTOP-33PCD1S\\Documents\\GitHub\\prueba_tecnica_AFRG\\prolibu-client\\src\\components\\FormProduct.vue"],"sourcesContent":["<template>\r\n    <tr>\r\n        <td>{{selectedProduct.sku}}</td>\r\n        <td>\r\n            <select v-model=\"selectedProduct\" @change=\"changeSelected\">\r\n                <option v-for=\"prod in products_fetched\" :key=\"prod.sku\" :value=\"prod\">{{prod.name}}</option>\r\n            </select>\r\n        </td>\r\n        <td>\r\n            <div id=\"units\">\r\n                <button @click=\"decreseUnit\">-</button>\r\n                <input type=\"number\" min=\"1\" v-model=\"units\">\r\n                <button @click=\"addUnit\">+</button>\r\n            </div>\r\n        </td>\r\n        <td>{{selectedProduct.currency + ' ' + selectedProduct.price}}</td>\r\n        <td>{{selected_currency_info.code + conversion}}</td>\r\n        <td>{{selected_currency_info.code + quantity_price}}</td>\r\n        <td><input type=\"number\" min=\"0\" max=\"100\" placeholder=\"0\" @change=\"updateData\" v-model=\"discount\"></td>\r\n        <td>{{selectedProduct.taxRate + '%'}}</td>\r\n        <td>{{selected_currency_info.code + ' ' + sub_total}}</td>\r\n    </tr>\r\n</template>\r\n\r\n<script>\r\nimport \"vue-select/dist/vue-select.css\";\r\n\r\n\r\nexport default {\r\n    name: \"FormProduct\",\r\n    props: [\r\n        'product_prop',\r\n        'products_fetched',\r\n        'selected_currency_info',\r\n        'currency_fetched',\r\n    ],\r\n    components: {\r\n    },\r\n    methods: {\r\n        findMyCurrency(currency_code) {\r\n            for (let i = 0; i < this.currency_fetched.length; i++){\r\n                console.log(this.currency_fetched[i])\r\n                if (this.currency_fetched[i].code == currency_code) {\r\n                    return this.currency_fetched[i]\r\n                }\r\n            }\r\n        },\r\n        updateData(){\r\n            if (this.currency == this.selected_currency_info.code){\r\n                this.conversion = this.selectedProduct.price\r\n                this.quantity_price = ' ' + parseFloat(this.units * this.selectedProduct.price).toFixed(2)\r\n            } else {\r\n                const thisCurrency = this.findMyCurrency(this.selectedProduct.currency)\r\n                console.log(thisCurrency, this.selectedProduct.price, this.currency_price, thisCurrency.value)\r\n                this.conversion = ' ' + parseFloat((this.selectedProduct.price * this.currency_price) / thisCurrency.value).toFixed(2)\r\n                this.quantity_price = ' ' + parseFloat(((this.selectedProduct.price * this.currency_price) / thisCurrency.value) * this.units).toFixed(2)\r\n            }\r\n\r\n            const val = parseFloat(Number(this.quantity_price) + (Number(this.quantity_price) * Number(this.selectedProduct.taxRate) / 100)).toFixed(2)\r\n\r\n            \r\n            this.sub_total = parseFloat(val - (Number(this.quantity_price) * Number(this.discount) / 100) ).toFixed(2)\r\n        },\r\n        addUnit(e) {\r\n            e.preventDefault()\r\n            this.units += 1\r\n\r\n            this.updateData()\r\n         },\r\n        decreseUnit(e) {\r\n            e.preventDefault()\r\n\r\n            if (this.units > 1) {\r\n                this.units -= 1\r\n            } else {\r\n                //Remove Product\r\n                console.log('about to remove')\r\n                this.$emit('removeProduct', this.product_prop.entry_uuid)\r\n            }\r\n\r\n            this.updateData()\r\n        },\r\n        changeSelected() {\r\n            console.log(this.selectedProduct.currency)\r\n            this.currency = this.selectedProduct.currency\r\n            this.updateData()\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            units: 1,\r\n            discount: 0,\r\n            currency: 'USD',\r\n            currency_price: 0,\r\n            conversion: 0,\r\n            quantity_price: 0,\r\n            sub_total: 0,\r\n            selectedProduct:  \r\n          {\r\n            \"sku\": \"--\",\r\n            \"name\": \"Pinzas\",\r\n            \"price\": 0,\r\n            \"currency\": \"USD\",\r\n            \"taxRate\": 0\r\n          },\r\n        }\r\n    },\r\n    watch: {\r\n        selected_currency_info: {\r\n            immediate: true,\r\n            handler (val) {\r\n                this.currency_price = val.value \r\n\r\n                console.log(this.currency, val.code)\r\n                this.updateData()\r\n\r\n            }\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    input::-webkit-outer-spin-button,\r\n    input::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n    }\r\n\r\n    /* Firefox */\r\n    input[type=number] {\r\n    -moz-appearance: textfield;\r\n    }\r\n\r\n\r\n    #units {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    td, table, th {\r\n        border-radius: 10px;\r\n        padding: 5px;\r\n        background: whitesmoke;\r\n        height: 50px;\r\n    }\r\n\r\n    button {\r\n        background: #136dff;\r\n        border: 0px;\r\n        border-radius: 10px;\r\n        height: 18px;\r\n        width: 18px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        color: rgb(255, 255, 255);\r\n        cursor: pointer;\r\n    }\r\n\r\n    input {\r\n        width: 50%;\r\n        border: 1px solid #2323234d;\r\n        border-radius: 10px;\r\n        padding: 5px;\r\n        text-align: center;\r\n    }\r\n\r\n    select {\r\n        width: 80%;\r\n        border: 1px solid #2323234d;\r\n        border-radius: 10px;\r\n        padding: 5px;\r\n        text-align: left;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module"}