{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-3653b40b\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = [\"value\"];\nconst _hoisted_2 = {\n  id: \"units\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString($data.selectedProduct.sku), 1\n  /* TEXT */\n  ), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedProduct = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.changeSelected && $options.changeSelected(...args))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.products_fetched, prod => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: prod.sku,\n      value: prod\n    }, _toDisplayString(prod.name), 9\n    /* TEXT, PROPS */\n    , _hoisted_1);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelSelect, $data.selectedProduct]])]), _createElementVNode(\"td\", null, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.decreseUnit && $options.decreseUnit(...args))\n  }, \"-\"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    min: \"1\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.units = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.units]]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.addUnit && $options.addUnit(...args))\n  }, \"+\")])]), _createElementVNode(\"td\", null, _toDisplayString($data.selectedProduct.currency + ' ' + $data.selectedProduct.price), 1\n  /* TEXT */\n  ), _createElementVNode(\"td\", null, _toDisplayString($props.selected_currency_info.code + $data.conversion), 1\n  /* TEXT */\n  ), _createElementVNode(\"td\", null, _toDisplayString($props.selected_currency_info.code + $data.quantity_price), 1\n  /* TEXT */\n  ), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    max: \"100\",\n    placeholder: \"0\",\n    onChange: _cache[5] || (_cache[5] = (...args) => $options.updateData && $options.updateData(...args)),\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.discount = $event)\n  }, null, 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelText, $data.discount]])]), _createElementVNode(\"td\", null, _toDisplayString($data.selectedProduct.taxRate + '%'), 1\n  /* TEXT */\n  ), _createElementVNode(\"td\", null, _toDisplayString($props.selected_currency_info.code + ' ' + $data.sub_total), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;;;;;AASiBA,IAAE,EAAC;;;uBARhBC,oBAoBK,IApBL,EAoBK,IApBL,EAoBK,CAnBDC,oBAAgC,IAAhC,EAAgC,IAAhC,EAAgCC,iBAA1BC,sBAAgBC,GAAU,CAAhC,EAAyB;AAAA;AAAzB,GAmBC,EAlBDH,oBAIK,IAJL,EAIK,IAJL,EAIK,iBAHDA,oBAES,QAFT,EAES;+DAFQE,wBAAeE,OAEvB;AAF0BC,YAAM,yCAAEC,2DAAF;AAEhC,GAFT,sBACIP,oBAA6FQ,SAA7F,EAA6F,IAA7F,EAA6FC,YAAtEC,uBAAsE,EAA9EC,IAAwB,IAApB;yBAAnBX,oBAA6F,QAA7F,EAA6F;AAAnDY,SAAG,EAAED,IAAI,CAACP,GAAyC;AAAnCS,WAAK,EAAEF;AAA4B,KAA7F,mBAAyEA,IAAI,CAACG,KAA9E,EAAkF;AAAA;AAAlF,MAAkFC,UAAlF;GAA6F,CAA7F;;AAAA,KADJ;;AAAA,sBAAiBZ,wBAGhB,CAJL,CAkBC,EAbDF,oBAMK,IANL,EAMK,IANL,EAMK,CALDA,oBAIM,KAJN,cAIM,CAHFA,oBAAuC,QAAvC,EAAuC;AAA9Be,WAAK,yCAAET,qDAAF;AAAyB,GAAvC,EAA6B,GAA7B,CAGE,kBAFFN,oBAA6C,OAA7C,EAA6C;AAAtCgB,QAAI,EAAC,QAAiC;AAAxBC,OAAG,EAAC,GAAoB;+DAAPf,cAAKE;AAAE,GAA7C;;AAAA,oBAAsCF,cAEpC,EADFF,oBAAmC,QAAnC,EAAmC;AAA1Be,WAAK,yCAAET,6CAAF;AAAqB,GAAnC,EAAyB,GAAzB,CACE,CAJN,CAKC,CANL,CAaC,EANDN,oBAAmE,IAAnE,EAAmE,IAAnE,EAAmEC,iBAA7DC,sBAAgBgB,QAAhB,GAAwB,GAAxB,GAAiChB,sBAAgBiB,KAAY,CAAnE,EAA4D;AAAA;AAA5D,GAMC,EALDnB,oBAAqD,IAArD,EAAqD,IAArD,EAAqDC,iBAA/CQ,8BAAuBW,IAAvB,GAA8BlB,gBAAiB,CAArD,EAA8C;AAAA;AAA9C,GAKC,EAJDF,oBAAyD,IAAzD,EAAyD,IAAzD,EAAyDC,iBAAnDQ,8BAAuBW,IAAvB,GAA8BlB,oBAAqB,CAAzD,EAAkD;AAAA;AAAlD,GAIC,EAHDF,oBAAwG,IAAxG,EAAwG,IAAxG,EAAwG,iBAApGA,oBAA+F,OAA/F,EAA+F;AAAxFgB,QAAI,EAAC,QAAmF;AAA1EC,OAAG,EAAC,GAAsE;AAAlEI,OAAG,EAAC,KAA8D;AAAxDC,eAAW,EAAC,GAA4C;AAAvCjB,YAAM,yCAAEC,mDAAF,CAAiC;+DAAVJ,iBAAQE;AAAE,GAA/F;;AAAA,oBAAqFF,iBAAe,CAAxG,CAGC,EAFDF,oBAA0C,IAA1C,EAA0C,IAA1C,EAA0CC,iBAApCC,sBAAgBqB,OAAhB,GAAuB,GAAa,CAA1C,EAA6B;AAAA;AAA7B,GAEC,EADDvB,oBAA0D,IAA1D,EAA0D,IAA1D,EAA0DC,iBAApDQ,8BAAuBW,IAAvB,GAA2B,GAA3B,GAAoClB,eAAgB,CAA1D,EAAmD;AAAA;AAAnD,GACC,CApBL","names":["id","_createElementBlock","_createElementVNode","_toDisplayString","$data","sku","$event","onChange","$options","_Fragment","_renderList","$props","prod","key","value","name","_hoisted_1","onClick","type","min","currency","price","code","max","placeholder","taxRate"],"sourceRoot":"","sources":["C:\\Users\\01mwk.DESKTOP-33PCD1S\\Documents\\GitHub\\prueba_tecnica_AFRG\\prolibu-client\\src\\components\\FormProduct.vue"],"sourcesContent":["<template>\r\n    <tr>\r\n        <td>{{selectedProduct.sku}}</td>\r\n        <td>\r\n            <select v-model=\"selectedProduct\" @change=\"changeSelected\">\r\n                <option v-for=\"prod in products_fetched\" :key=\"prod.sku\" :value=\"prod\">{{prod.name}}</option>\r\n            </select>\r\n        </td>\r\n        <td>\r\n            <div id=\"units\">\r\n                <button @click=\"decreseUnit\">-</button>\r\n                <input type=\"number\" min=\"1\" v-model=\"units\">\r\n                <button @click=\"addUnit\">+</button>\r\n            </div>\r\n        </td>\r\n        <td>{{selectedProduct.currency + ' ' + selectedProduct.price}}</td>\r\n        <td>{{selected_currency_info.code + conversion}}</td>\r\n        <td>{{selected_currency_info.code + quantity_price}}</td>\r\n        <td><input type=\"number\" min=\"0\" max=\"100\" placeholder=\"0\" @change=\"updateData\" v-model=\"discount\"></td>\r\n        <td>{{selectedProduct.taxRate + '%'}}</td>\r\n        <td>{{selected_currency_info.code + ' ' + sub_total}}</td>\r\n    </tr>\r\n</template>\r\n\r\n<script>\r\nimport \"vue-select/dist/vue-select.css\";\r\n\r\n\r\nexport default {\r\n    name: \"FormProduct\",\r\n    props: [\r\n        'product_prop',\r\n        'products_fetched',\r\n        'selected_currency_info',\r\n        'currency_fetched',\r\n    ],\r\n    components: {\r\n    },\r\n    methods: {\r\n        findMyCurrency(currency_code) {\r\n            for (let i = 0; i < this.currency_fetched.length; i++){\r\n                console.log(this.currency_fetched[i])\r\n                if (this.currency_fetched[i].code == currency_code) {\r\n                    return this.currency_fetched[i]\r\n                }\r\n            }\r\n        },\r\n        updateData(){\r\n            if (this.currency == this.selected_currency_info.code){\r\n                this.conversion = this.selectedProduct.price\r\n                this.quantity_price = ' ' + parseFloat(this.units * this.selectedProduct.price).toFixed(2)\r\n            } else {\r\n                const thisCurrency = this.findMyCurrency(this.selectedProduct.currency)\r\n                console.log(thisCurrency, this.selectedProduct.price, this.currency_price, thisCurrency.value)\r\n                this.conversion = ' ' + parseFloat((this.selectedProduct.price * this.currency_price) / thisCurrency.value).toFixed(2)\r\n                this.quantity_price = ' ' + parseFloat(((this.selectedProduct.price * this.currency_price) / thisCurrency.value) * this.units).toFixed(2)\r\n            }\r\n\r\n            const val = Number(Number(this.quantity_price)  - (Number(this.quantity_price) * Number(this.discount) / 100))\r\n\r\n            console.log(val)\r\n            console.log(val + Number(Number(val) * Number(this.selectedProduct.taxRate) / 100))\r\n            \r\n            this.sub_total = parseFloat(val + (Number(val) * Number(this.selectedProduct.taxRate) / 100)).toFixed(2)\r\n\r\n            this.$emit(\"changedSubTotal\", 1)\r\n\r\n        },\r\n        addUnit(e) {\r\n            e.preventDefault()\r\n            this.units += 1\r\n\r\n            this.updateData()\r\n         },\r\n        decreseUnit(e) {\r\n            e.preventDefault()\r\n\r\n            if (this.units > 1) {\r\n                this.units -= 1\r\n            } else {\r\n                //Remove Product\r\n                console.log('about to remove')\r\n                this.$emit('removeProduct', this.product_prop.entry_uuid)\r\n            }\r\n\r\n            this.updateData()\r\n        },\r\n        changeSelected() {\r\n            console.log(this.selectedProduct.currency)\r\n            this.currency = this.selectedProduct.currency\r\n            this.updateData()\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            units: 1,\r\n            discount: 0,\r\n            currency: 'USD',\r\n            currency_price: 0,\r\n            conversion: 0,\r\n            quantity_price: 0,\r\n            sub_total: 0,\r\n            selectedProduct:  \r\n          {\r\n            \"sku\": \"--\",\r\n            \"name\": \"Pinzas\",\r\n            \"price\": 0,\r\n            \"currency\": \"USD\",\r\n            \"taxRate\": 0\r\n          },\r\n        }\r\n    },\r\n    watch: {\r\n        selected_currency_info: {\r\n            immediate: true,\r\n            handler (val) {\r\n                this.currency_price = val.value \r\n\r\n                console.log(this.currency, val.code)\r\n                this.updateData()\r\n\r\n            }\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    input::-webkit-outer-spin-button,\r\n    input::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n    }\r\n\r\n    /* Firefox */\r\n    input[type=number] {\r\n    -moz-appearance: textfield;\r\n    }\r\n\r\n\r\n    #units {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    td, table, th {\r\n        border-radius: 10px;\r\n        padding: 5px;\r\n        background: whitesmoke;\r\n        height: 50px;\r\n    }\r\n\r\n    button {\r\n        background: #136dff;\r\n        border: 0px;\r\n        border-radius: 10px;\r\n        height: 18px;\r\n        width: 18px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        color: rgb(255, 255, 255);\r\n        cursor: pointer;\r\n    }\r\n\r\n    input {\r\n        width: 50%;\r\n        border: 1px solid #2323234d;\r\n        border-radius: 10px;\r\n        padding: 5px;\r\n        text-align: center;\r\n    }\r\n\r\n    select {\r\n        width: 80%;\r\n        border: 1px solid #2323234d;\r\n        border-radius: 10px;\r\n        padding: 5px;\r\n        text-align: left;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module"}